{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","onTabSelected","selectedTabId","selectedTab","find","tab","id","className","map","classNames","href","onClick","title","content","App","useState","activeTab","setActiveTab","ReactDOM","render","document","getElementById"],"mappings":"kNAeaA,EAAwB,SAACC,GACpC,IACEC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,cACAC,EACEH,EADFG,cAGIC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAEvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWE,IACT,CACE,YAAaJ,IAAQF,IAGzB,UAAQ,MANV,SASE,mBACEO,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBAAMT,IAAkBG,EAAIC,IAAML,EAAcI,IAH3D,SAKGA,EAAIO,SAPFP,EAAIC,WAcjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYU,cC3CRb,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAkCC,mBAASf,EAAK,IAAhD,mBAAOgB,EAAP,KAAkBC,EAAlB,KAGA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBS,EAAUJ,SAGhC,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAVgB,SAACI,GAAD,OAAcY,EAAaZ,IAW3CH,cAAec,EAAUV,SCxBjCY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.70ab92c2.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nexport interface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[],\n  onTabSelected: (tab: Tab) => void;\n  selectedTabId: string;\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const {\n    tabs,\n    onTabSelected,\n    selectedTabId,\n  } = props;\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames(\n                {\n                  'is-active': tab === selectedTab,\n                },\n              )}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => selectedTabId !== tab.id && onTabSelected(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [activeTab, setActiveTab] = useState(tabs[0]);\n  const onTabSelected = (tab: Tab) => setActiveTab(tab);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${activeTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelected={onTabSelected}\n        selectedTabId={activeTab.id}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}